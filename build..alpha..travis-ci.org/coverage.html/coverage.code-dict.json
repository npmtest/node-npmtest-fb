{"/home/travis/build/npmtest/node-npmtest-fb/test.js":"/* istanbul instrument in package npmtest_fb */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-fb/lib.npmtest_fb.js":"/* istanbul instrument in package npmtest_fb */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_fb = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_fb = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-fb/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-fb && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_fb */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_fb\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_fb.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_fb.rollup.js'] =\n            local.assetsDict['/assets.npmtest_fb.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_fb.__dirname + '/lib.npmtest_fb.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-fb/node_modules/fb/lib/index.js":"'use strict';\n/**\n * Simultaneously satisfy require('fb') and Babel based ES2015 `import`\n * by exporting an object using Babel's __esModule which contains the normal\n * exports; and bound versions of the methods on FB.\n */\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _getOwnPropertyNames = require('babel-runtime/core-js/object/get-own-property-names');\n\nvar _getOwnPropertyNames2 = _interopRequireDefault(_getOwnPropertyNames);\n\nvar _getIterator2 = require('babel-runtime/core-js/get-iterator');\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar mod = require('./fb'),\n    FB = mod.FB;\nvar _iteratorNormalCompletion = true;\nvar _didIteratorError = false;\nvar _iteratorError = undefined;\n\ntry {\n\n\tfor (var _iterator = (0, _getIterator3.default)((0, _getOwnPropertyNames2.default)((0, _getPrototypeOf2.default)(FB))), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t\tvar _key = _step.value;\n\n\t\tif (_key === 'constructor') continue;\n\t\tif (typeof FB[_key] === 'function') {\n\t\t\texports[_key] = FB[_key].bind(FB);\n\t\t} else {\n\t\t\texports[_key] = FB[_key];\n\t\t}\n\t}\n} catch (err) {\n\t_didIteratorError = true;\n\t_iteratorError = err;\n} finally {\n\ttry {\n\t\tif (!_iteratorNormalCompletion && _iterator.return) {\n\t\t\t_iterator.return();\n\t\t}\n\t} finally {\n\t\tif (_didIteratorError) {\n\t\t\tthrow _iteratorError;\n\t\t}\n\t}\n}\n\nfor (var key in mod) {\n\texports[key] = mod[key];\n}\n\nObject.defineProperty(exports, '__esModule', { value: true });","/home/travis/build/npmtest/node-npmtest-fb/node_modules/fb/lib/fb.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.version = exports.FacebookApiException = exports.Facebook = exports.FB = undefined;\n\nvar _getOwnPropertyDescriptor = require('babel-runtime/core-js/object/get-own-property-descriptor');\n\nvar _getOwnPropertyDescriptor2 = _interopRequireDefault(_getOwnPropertyDescriptor);\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _symbol = require('babel-runtime/core-js/symbol');\n\nvar _symbol2 = _interopRequireDefault(_symbol);\n\nvar _stringify = require('babel-runtime/core-js/json/stringify');\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _create = require('babel-runtime/core-js/object/create');\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _assign = require('babel-runtime/core-js/object/assign');\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _desc, _value, _class;\n\nvar _anyPromise = require('any-promise');\n\nvar _anyPromise2 = _interopRequireDefault(_anyPromise);\n\nvar _coreDecorators = require('core-decorators');\n\nvar _debug = require('debug');\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _request = require('request');\n\nvar _request2 = _interopRequireDefault(_request);\n\nvar _url = require('url');\n\nvar _url2 = _interopRequireDefault(_url);\n\nvar _querystring = require('querystring');\n\nvar _querystring2 = _interopRequireDefault(_querystring);\n\nvar _crypto = require('crypto');\n\nvar _crypto2 = _interopRequireDefault(_crypto);\n\nvar _FacebookApiException = require('./FacebookApiException');\n\nvar _FacebookApiException2 = _interopRequireDefault(_FacebookApiException);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n\tvar desc = {};\n\tObject['ke' + 'ys'](descriptor).forEach(function (key) {\n\t\tdesc[key] = descriptor[key];\n\t});\n\tdesc.enumerable = !!desc.enumerable;\n\tdesc.configurable = !!desc.configurable;\n\n\tif ('value' in desc || desc.initializer) {\n\t\tdesc.writable = true;\n\t}\n\n\tdesc = decorators.slice().reverse().reduce(function (desc, decorator) {\n\t\treturn decorator(target, property, desc) || desc;\n\t}, desc);\n\n\tif (context && desc.initializer !== void 0) {\n\t\tdesc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n\t\tdesc.initializer = undefined;\n\t}\n\n\tif (desc.initializer === void 0) {\n\t\tObject['define' + 'Property'](target, property, desc);\n\t\tdesc = null;\n\t}\n\n\treturn desc;\n}\n\nvar _require = require('../package.json'),\n    version = _require.version,\n    debugReq = (0, _debug2.default)('fb:req'),\n    debugSig = (0, _debug2.default)('fb:sig'),\n    METHODS = ['get', 'post', 'delete', 'put'],\n    toString = Object.prototype.toString,\n    has = Object.prototype.hasOwnProperty,\n    log = function log(d) {\n\t// todo\n\tconsole.log(d); // eslint-disable-line no-console\n},\n    defaultOptions = (0, _assign2.default)((0, _create2.default)(null), {\n\tPromise: _anyPromise2.default,\n\taccessToken: null,\n\tappId: null,\n\tappSecret: null,\n\tappSecretProof: null,\n\tbeta: false,\n\tversion: 'v2.3',\n\ttimeout: null,\n\tscope: null,\n\tredirectUri: null,\n\tproxy: null,\n\tuserAgent: `thuzi_nodejssdk/${version}`\n}),\n    isValidOption = function isValidOption(key) {\n\treturn has.call(defaultOptions, key);\n},\n    stringifyParams = function stringifyParams(params) {\n\tvar data = {};\n\n\tfor (var key in params) {\n\t\tvar value = params[key];\n\t\tif (value && typeof value !== 'string') {\n\t\t\tvalue = (0, _stringify2.default)(value);\n\t\t}\n\t\tif (value !== undefined) {\n\t\t\tdata[key] = value;\n\t\t}\n\t}\n\n\treturn _querystring2.default.stringify(data);\n},\n    postParamData = function postParamData(params) {\n\tvar data = {},\n\t    isFormData = false;\n\n\tfor (var key in params) {\n\t\tvar value = params[key];\n\t\tif (value && typeof value !== 'string') {\n\t\t\tvar _context;\n\n\t\t\tvar val = typeof value === 'object' && (_context = value, has).call(_context, 'value') && (_context = value, has).call(_context, 'options') ? value.value : value;\n\t\t\tif (Buffer.isBuffer(val)) {\n\t\t\t\tisFormData = true;\n\t\t\t} else if (typeof val.read === 'function' && typeof val.pipe === 'function' && val.readable) {\n\t\t\t\tisFormData = true;\n\t\t\t} else {\n\t\t\t\tvalue = (0, _stringify2.default)(value);\n\t\t\t}\n\t\t}\n\t\tif (value !== undefined) {\n\t\t\tdata[key] = value;\n\t\t}\n\t}\n\n\treturn { [isFormData ? 'formData' : 'form']: data };\n},\n    getAppSecretProof = function getAppSecretProof(accessToken, appSecret) {\n\tvar hmac = _crypto2.default.createHmac('sha256', appSecret);\n\thmac.update(accessToken);\n\treturn hmac.digest('hex');\n},\n    base64UrlDecode = function base64UrlDecode(str) {\n\tvar base64String = str.replace(/\\-/g, '+').replace(/_/g, '/');\n\tvar buffer = new Buffer(base64String, 'base64');\n\treturn buffer.toString('utf8');\n},\n    nodeifyCallback = function nodeifyCallback(originalCallback) {\n\t// normalizes the callback parameters so that the\n\t// first parameter is always error and second is response\n\treturn function (res) {\n\t\tif (!res || res.error) {\n\t\t\toriginalCallback(new _FacebookApiException2.default(res));\n\t\t} else {\n\t\t\toriginalCallback(null, res);\n\t\t}\n\t};\n};\n\nvar _opts = (0, _symbol2.default)('opts');\nvar graph = (0, _symbol2.default)('graph');\nvar oauthRequest = (0, _symbol2.default)('oauthRequest');\n\nvar Facebook = (_class = function () {\n\tfunction Facebook(opts, _internalInherit) {\n\t\t(0, _classCallCheck3.default)(this, Facebook);\n\n\t\tif (_internalInherit instanceof Facebook) {\n\t\t\tthis[_opts] = (0, _create2.default)(_internalInherit[_opts]);\n\t\t} else {\n\t\t\tthis[_opts] = (0, _create2.default)(defaultOptions);\n\t\t}\n\n\t\tif (typeof opts === 'object') {\n\t\t\tthis.options(opts);\n\t\t}\n\t}\n\n\t/**\n  *\n  * @access public\n  * @param path {String} the url path\n  * @param method {String} the http method (default: `\"GET\"`)\n  * @param params {Object} the parameters for the query\n  * @param cb {Function} the callback function to handle the response\n  * @return {Promise|undefined}\n  */\n\n\n\t(0, _createClass3.default)(Facebook, [{\n\t\tkey: 'api',\n\t\tvalue: function api() {\n\t\t\tfor (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\t\targs[_key] = arguments[_key];\n\t\t\t}\n\n\t\t\t//\n\t\t\t// FB.api('/platform', function(response) {\n\t\t\t//  console.log(response.company_overview);\n\t\t\t// });\n\t\t\t//\n\t\t\t// FB.api('/platform/posts', { limit: 3 }, function(response) {\n\t\t\t// });\n\t\t\t//\n\t\t\t// FB.api('/me/feed', 'post', { message: body }, function(response) {\n\t\t\t//  if(!response || response.error) {\n\t\t\t//      console.log('Error occured');\n\t\t\t//  } else {\n\t\t\t//      console.log('Post ID:' + response.id);\n\t\t\t//  }\n\t\t\t// });\n\t\t\t//\n\t\t\t// var postId = '1234567890';\n\t\t\t// FB.api(postId, 'delete', function(response) {\n\t\t\t//  if(!response || response.error) {\n\t\t\t//      console.log('Error occurred');\n\t\t\t//  } else {\n\t\t\t//      console.log('Post was deleted');\n\t\t\t//  }\n\t\t\t// });\n\t\t\t//\n\t\t\t//\n\n\t\t\tvar ret = void 0;\n\n\t\t\tif (args.length > 0 && typeof args[args.length - 1] !== 'function') {\n\t\t\t\tvar _Promise = this.options('Promise');\n\t\t\t\tret = new _Promise(function (resolve, reject) {\n\t\t\t\t\targs.push(function (res) {\n\t\t\t\t\t\tif (!res || res.error) {\n\t\t\t\t\t\t\treject(new _FacebookApiException2.default(res));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresolve(res);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis[graph].apply(this, args);\n\n\t\t\treturn ret;\n\t\t}\n\n\t\t/**\n   *\n   * @access public\n   * @param path {String} the url path\n   * @param method {String} the http method (default: `\"GET\"`)\n   * @param params {Object} the parameters for the query\n   * @param cb {Function} the callback function to handle the error and response\n   */\n\t\t// this method does not exist in fb js sdk\n\n\t}, {\n\t\tkey: 'napi',\n\t\tvalue: function napi() {\n\t\t\tfor (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t\t\t\targs[_key2] = arguments[_key2];\n\t\t\t}\n\n\t\t\t//\n\t\t\t// normalizes to node style callback so can use the sdk with async control flow node libraries\n\t\t\t//  first parameters:          error (always type of FacebookApiException)\n\t\t\t//  second callback parameter: response\n\t\t\t//\n\t\t\t// FB.napi('/platform', function(err, response) {\n\t\t\t//  console.log(response.company_overview);\n\t\t\t// });\n\t\t\t//\n\t\t\t// FB.napi('/platform/posts', { limit: 3 }, function(err, response) {\n\t\t\t// });\n\t\t\t//\n\t\t\t// FB.napi('/me/feed', 'post', { message: body }, function(error, response) {\n\t\t\t//  if(error) {\n\t\t\t//      console.log('Error occured');\n\t\t\t//  } else {\n\t\t\t//      console.log('Post ID:' + response.id);\n\t\t\t//  }\n\t\t\t// });\n\t\t\t//\n\t\t\t// var postId = '1234567890';\n\t\t\t// FB.napi(postId, 'delete', function(error, response) {\n\t\t\t//  if(error) {\n\t\t\t//      console.log('Error occurred');\n\t\t\t//  } else {\n\t\t\t//      console.log('Post was deleted');\n\t\t\t//  }\n\t\t\t// });\n\t\t\t//\n\t\t\t//\n\n\t\t\tif (args.length > 0) {\n\t\t\t\tvar originalCallback = args.pop();\n\t\t\t\targs.push(typeof originalCallback === 'function' ? nodeifyCallback(originalCallback) : originalCallback);\n\t\t\t}\n\n\t\t\tthis.api.apply(this, args);\n\t\t}\n\n\t\t/**\n   *\n   * Make a api call to Graph server.\n   *\n   * Except the path, all arguments to this function are optiona. So any of\n   * these are valid:\n   *\n   *  FB.api('/me') // throw away the response\n   *  FB.api('/me', function(r) { console.log(r) })\n   *  FB.api('/me', { fields: 'email' }); // throw away response\n   *  FB.api('/me', { fields: 'email' }, function(r) { console.log(r) });\n   *  FB.api('/123456789', 'delete', function(r) { console.log(r) } );\n   *  FB.api(\n   *      '/me/feed',\n   *      'post',\n   *      { body: 'hi there' },\n   *      function(r) { console.log(r) }\n   *  );\n   *\n   */\n\n\t}, {\n\t\tkey: graph,\n\t\tvalue: function value(path, next) {\n\t\t\tvar method, params, cb;\n\n\t\t\tif (typeof path !== 'string') {\n\t\t\t\tthrow new Error(`Path is of type ${typeof path}, not string`);\n\t\t\t}\n\n\t\t\tfor (var _len3 = arguments.length, args = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n\t\t\t\targs[_key3 - 2] = arguments[_key3];\n\t\t\t}\n\n\t\t\twhile (next) {\n\t\t\t\tvar type = typeof next;\n\t\t\t\tif (type === 'string' && !method) {\n\t\t\t\t\tmethod = next.toLowerCase();\n\t\t\t\t} else if (type === 'function' && !cb) {\n\t\t\t\t\tcb = next;\n\t\t\t\t} else if (type === 'object' && !params) {\n\t\t\t\t\tparams = next;\n\t\t\t\t} else {\n\t\t\t\t\tlog('Invalid argument passed to FB.api(): ' + next);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tnext = args.shift();\n\t\t\t}\n\n\t\t\tmethod = method || 'get';\n\t\t\tparams = params || {};\n\n\t\t\t// remove prefix slash if one is given, as it's already in the base url\n\t\t\tif (path[0] === '/') {\n\t\t\t\tpath = path.substr(1);\n\t\t\t}\n\n\t\t\tif (METHODS.indexOf(method) < 0) {\n\t\t\t\tlog('Invalid method passed to FB.api(): ' + method);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis[oauthRequest](path, method, params, cb);\n\t\t}\n\n\t\t/**\n   * Add the oauth parameter, and fire of a request.\n   *\n   * @access private\n   * @param path {String}     the request path\n   * @param method {String}   the http method\n   * @param params {Object}   the parameters for the query\n   * @param cb {Function}     the callback function to handle the response\n   */\n\n\t}, {\n\t\tkey: oauthRequest,\n\t\tvalue: function value(path, method, params, cb) {\n\t\t\tvar uri, parsedUri, parsedQuery, formOptions, requestOptions, pool;\n\n\t\t\tcb = cb || function () {};\n\t\t\tif (!params.access_token) {\n\t\t\t\tif (this.options('accessToken')) {\n\t\t\t\t\tparams.access_token = this.options('accessToken');\n\t\t\t\t\tif (this.options('appSecret')) {\n\t\t\t\t\t\tparams.appsecret_proof = this.options('appSecretProof');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (!params.appsecret_proof && this.options('appSecret')) {\n\t\t\t\tparams.appsecret_proof = getAppSecretProof(params.access_token, this.options('appSecret'));\n\t\t\t}\n\n\t\t\tif (!/^v\\d+\\.\\d+\\//.test(path)) {\n\t\t\t\tpath = this.options('version') + '/' + path;\n\t\t\t}\n\t\t\turi = `https://graph.${this.options('beta') ? 'beta.' : ''}facebook.com/${path}`;\n\n\t\t\tparsedUri = _url2.default.parse(uri);\n\t\t\tdelete parsedUri.search;\n\t\t\tparsedQuery = _querystring2.default.parse(parsedUri.query);\n\n\t\t\tif (method === 'post') {\n\t\t\t\tif (params.access_token) {\n\t\t\t\t\tparsedQuery.access_token = params.access_token;\n\t\t\t\t\tdelete params.access_token;\n\n\t\t\t\t\tif (params.appsecret_proof) {\n\t\t\t\t\t\tparsedQuery.appsecret_proof = params.appsecret_proof;\n\t\t\t\t\t\tdelete params.appsecret_proof;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tformOptions = postParamData(params);\n\t\t\t} else {\n\t\t\t\tfor (var key in params) {\n\t\t\t\t\tparsedQuery[key] = params[key];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tparsedUri.search = stringifyParams(parsedQuery);\n\t\t\turi = _url2.default.format(parsedUri);\n\n\t\t\tpool = { maxSockets: this.options('maxSockets') || Number(process.env.MAX_SOCKETS) || 5 };\n\t\t\trequestOptions = (0, _extends3.default)({\n\t\t\t\tmethod,\n\t\t\t\turi\n\t\t\t}, formOptions, {\n\t\t\t\tpool\n\t\t\t});\n\t\t\tif (this.options('proxy')) {\n\t\t\t\trequestOptions['proxy'] = this.options('proxy');\n\t\t\t}\n\t\t\tif (this.options('timeout')) {\n\t\t\t\trequestOptions['timeout'] = this.options('timeout');\n\t\t\t}\n\t\t\tif (this.options('userAgent')) {\n\t\t\t\trequestOptions['headers'] = {\n\t\t\t\t\t'User-Agent': this.options('userAgent')\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tdebugReq(method.toUpperCase() + ' ' + uri);\n\t\t\t(0, _request2.default)(requestOptions, function (error, response, body) {\n\t\t\t\tif (error !== null) {\n\t\t\t\t\tif (error === Object(error) && has.call(error, 'error')) {\n\t\t\t\t\t\treturn cb(error);\n\t\t\t\t\t}\n\t\t\t\t\treturn cb({ error });\n\t\t\t\t}\n\n\t\t\t\tvar json = void 0;\n\t\t\t\ttry {\n\t\t\t\t\tjson = JSON.parse(body);\n\t\t\t\t} catch (ex) {\n\t\t\t\t\t// sometimes FB is has API errors that return HTML and a message\n\t\t\t\t\t// of \"Sorry, something went wrong\". These are infrequent and unpredictable but\n\t\t\t\t\t// let's not let them blow up our application.\n\t\t\t\t\tjson = {\n\t\t\t\t\t\terror: {\n\t\t\t\t\t\t\tcode: 'JSONPARSE',\n\t\t\t\t\t\t\tError: ex\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tcb(json);\n\t\t\t});\n\t\t}\n\n\t\t/**\n   *\n   * @access public\n   * @param signedRequest {String} the signed request value\n   * @param appSecret {String} the application secret\n   * @return {Object} the parsed signed request or undefined if failed\n   *\n   * throws error if appSecret is not defined\n   *\n   * FB.parseSignedRequest('signedRequest', 'appSecret')\n   * FB.parseSignedRequest('signedRequest') // will use appSecret from options('appSecret')\n   *\n   */\n\n\t}, {\n\t\tkey: 'parseSignedRequest',\n\t\tvalue: function parseSignedRequest(signedRequest) {\n\t\t\tvar _context2;\n\n\t\t\tfor (var _len4 = arguments.length, args = Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n\t\t\t\targs[_key4 - 1] = arguments[_key4];\n\t\t\t}\n\n\t\t\t// this method does not exist in fb js sdk\n\t\t\tvar appSecret = args.shift() || this.options('appSecret'),\n\t\t\t    split,\n\t\t\t    encodedSignature,\n\t\t\t    encodedEnvelope,\n\t\t\t    envelope,\n\t\t\t    hmac,\n\t\t\t    base64Digest,\n\t\t\t    base64UrlDigest;\n\n\t\t\tif (!signedRequest) {\n\t\t\t\tdebugSig('invalid signedRequest');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!appSecret) {\n\t\t\t\tthrow new Error('appSecret required');\n\t\t\t}\n\n\t\t\tsplit = signedRequest.split('.');\n\n\t\t\tif (split.length !== 2) {\n\t\t\t\tdebugSig('invalid signedRequest');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar _split = split;\n\n\t\t\tvar _split2 = (0, _slicedToArray3.default)(_split, 2);\n\n\t\t\tencodedSignature = _split2[0];\n\t\t\tencodedEnvelope = _split2[1];\n\n\n\t\t\tif (!encodedSignature || !encodedEnvelope) {\n\t\t\t\tdebugSig('invalid signedRequest');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tenvelope = JSON.parse(base64UrlDecode(encodedEnvelope));\n\t\t\t} catch (ex) {\n\t\t\t\tdebugSig('encodedEnvelope is not a valid base64 encoded JSON');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!(envelope && (_context2 = envelope, has).call(_context2, 'algorithm') && envelope.algorithm.toUpperCase() === 'HMAC-SHA256')) {\n\t\t\t\tdebugSig(envelope.algorithm + ' is not a supported algorithm, must be one of [HMAC-SHA256]');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\thmac = _crypto2.default.createHmac('sha256', appSecret);\n\t\t\thmac.update(encodedEnvelope);\n\t\t\tbase64Digest = hmac.digest('base64');\n\n\t\t\t// remove Base64 padding\n\t\t\tbase64UrlDigest = base64Digest.replace(/={1,3}$/, '');\n\n\t\t\t// Replace illegal characters\n\t\t\tbase64UrlDigest = base64UrlDigest.replace(/\\+/g, '-').replace(/\\//g, '_');\n\n\t\t\tif (base64UrlDigest !== encodedSignature) {\n\t\t\t\tdebugSig('invalid signature');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn envelope;\n\t\t}\n\n\t\t/**\n   *\n   * @access public\n   * @param opt {Object} the parameters for appId and scope\n   */\n\n\t}, {\n\t\tkey: 'getLoginUrl',\n\t\tvalue: function getLoginUrl() {\n\t\t\tvar opt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n\t\t\t// this method does not exist in fb js sdk\n\t\t\tvar clientId = opt.appId || opt.client_id || this.options('appId'),\n\t\t\t    redirectUri = opt.redirectUri || opt.redirect_uri || this.options('redirectUri') || 'https://www.facebook.com/connect/login_success.html',\n\t\t\t    scope = opt.scope || this.options('scope'),\n\t\t\t    display = opt.display,\n\t\t\t    state = opt.state,\n\t\t\t    scopeQuery = '',\n\t\t\t    displayQuery = '',\n\t\t\t    stateQuery = '';\n\n\t\t\tif (!clientId) {\n\t\t\t\tthrow new Error('client_id required');\n\t\t\t}\n\n\t\t\tif (scope) {\n\t\t\t\tscopeQuery = '&scope=' + encodeURIComponent(scope);\n\t\t\t}\n\n\t\t\tif (display) {\n\t\t\t\tdisplayQuery = '&display=' + display;\n\t\t\t}\n\n\t\t\tif (state) {\n\t\t\t\tstateQuery = '&state=' + state;\n\t\t\t}\n\n\t\t\treturn `https://www.facebook.com/${this.options('version')}/dialog/oauth` + '?response_type=' + (opt.responseType || opt.response_type || 'code') + scopeQuery + displayQuery + stateQuery + '&redirect_uri=' + encodeURIComponent(redirectUri) + '&client_id=' + clientId;\n\t\t}\n\t}, {\n\t\tkey: 'options',\n\t\tvalue: function options(keyOrOptions) {\n\t\t\t// this method does not exist in the fb js sdk\n\t\t\tvar o = this[_opts];\n\t\t\tif (!keyOrOptions) {\n\t\t\t\treturn o;\n\t\t\t}\n\t\t\tif (toString.call(keyOrOptions) === '[object String]') {\n\t\t\t\treturn isValidOption(keyOrOptions) && keyOrOptions in o ? o[keyOrOptions] : null;\n\t\t\t}\n\t\t\tfor (var key in o) {\n\t\t\t\tif (isValidOption(key) && key in o && has.call(keyOrOptions, key)) {\n\t\t\t\t\to[key] = keyOrOptions[key];\n\t\t\t\t\tswitch (key) {\n\t\t\t\t\t\tcase 'appSecret':\n\t\t\t\t\t\tcase 'accessToken':\n\t\t\t\t\t\t\to.appSecretProof = o.appSecret && o.accessToken ? getAppSecretProof(o.accessToken, o.appSecret) : null;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * Return a new instance of Facebook with a different set of options\n   * that inherit unset options from the current instance.\n   * @access public\n   * @param {Object} [opts] Options to set\n   */\n\n\t}, {\n\t\tkey: 'extend',\n\t\tvalue: function extend(opts) {\n\t\t\treturn new Facebook(opts, this);\n\t\t}\n\t}, {\n\t\tkey: 'getAccessToken',\n\t\tvalue: function getAccessToken() {\n\t\t\treturn this.options('accessToken');\n\t\t}\n\t}, {\n\t\tkey: 'setAccessToken',\n\t\tvalue: function setAccessToken(accessToken) {\n\t\t\t// this method does not exist in fb js sdk\n\t\t\tthis.options({ accessToken });\n\t\t}\n\t}, {\n\t\tkey: 'withAccessToken',\n\t\tvalue: function withAccessToken(accessToken) {\n\t\t\treturn this.extend({ accessToken });\n\t\t}\n\t}]);\n\treturn Facebook;\n}(), (_applyDecoratedDescriptor(_class.prototype, 'api', [_coreDecorators.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, 'api'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'napi', [_coreDecorators.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, 'napi'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'parseSignedRequest', [_coreDecorators.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, 'parseSignedRequest'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'getLoginUrl', [_coreDecorators.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, 'getLoginUrl'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'options', [_coreDecorators.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, 'options'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'extend', [_coreDecorators.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, 'extend'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'getAccessToken', [_coreDecorators.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, 'getAccessToken'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'setAccessToken', [_coreDecorators.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, 'setAccessToken'), _class.prototype), _applyDecoratedDescriptor(_class.prototype, 'withAccessToken', [_coreDecorators.autobind], (0, _getOwnPropertyDescriptor2.default)(_class.prototype, 'withAccessToken'), _class.prototype)), _class);\nvar FB = exports.FB = new Facebook();\nexports.default = FB;\nexports.Facebook = Facebook;\nexports.FacebookApiException = _FacebookApiException2.default;\nexports.version = version;","/home/travis/build/npmtest/node-npmtest-fb/node_modules/fb/lib/FacebookApiException.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _create = require('babel-runtime/core-js/object/create');\n\nvar _create2 = _interopRequireDefault(_create);\n\nvar _stringify = require('babel-runtime/core-js/json/stringify');\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nexports.default = FacebookApiException;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction FacebookApiException(res) {\n\tthis.name = 'FacebookApiException';\n\tthis.message = (0, _stringify2.default)(res || {});\n\tthis.response = res;\n\tError.captureStackTrace(this, this.constructor.name);\n}\n\nFacebookApiException.prototype = (0, _create2.default)(Error.prototype, {\n\tconstructor: {\n\t\tvalue: FacebookApiException,\n\t\tenumerable: false,\n\t\twritable: true,\n\t\tconfigurable: true\n\t}\n});"}